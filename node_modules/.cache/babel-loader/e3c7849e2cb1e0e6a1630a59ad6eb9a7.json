{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\ReactJs\\\\widget_contactos_v2\\\\my-app\\\\src\\\\Context\\\\ZohoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { ZOHO } from '../assets/Zoho';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZohoContext = /*#__PURE__*/createContext();\nexport default function ZohoProvider({\n  children\n}) {\n  _s();\n\n  const [module, setModule] = useState(null);\n  const [entity, setEntity] = useState(null);\n  const [id, setID] = useState(null);\n  const [infoCompleta, setInfoCompleta] = useState(null);\n  const [record, setRecord] = useState(null);\n  const [stores, setStores] = useState(null);\n  const [paises] = useState([\"Mexico\", \"Argentina\", \"Brasil\", \"Colombia\", \"Chile\", \"Ecuador\", \"Peru\", \"Uruguay\"]);\n  const [codigos, setCodigos] = useState({});\n  useEffect(() => {\n    const initWidget = () => {\n      ZOHO.embeddedApp.on(\"PageLoad\", function (data) {\n        console.log(data);\n        let id = data.EntityId;\n        setID(id);\n        console.log(id);\n        ZOHO.CRM.API.getRecord({\n          Entity: \"Deals\",\n          RecordID: id\n        }).then(result => {\n          setInfoCompleta(result.data[0].Informaci_n_de_Contacto_Completa);\n          setRecord(result.data[0]);\n        });\n        ZOHO.CRM.API.getRelatedRecords({\n          Entity: \"Deals\",\n          RecordID: id,\n          RelatedList: \"Oportunidades\"\n        }).then(data => {\n          setStores(data.data);\n          console.log(data.data);\n        });\n        let mapPaises = new Object({\n          Mexico: [],\n          Argentina: [],\n          Brasil: [],\n          Colombia: [],\n          Chile: [],\n          Ecuador: [],\n          Peru: [],\n          Uruguay: []\n        });\n        paises.forEach(pais => {\n          let variable = \"codigos_ciudad_\" + pais;\n          ZOHO.CRM.API.getOrgVariable(variable).then(function (data) {\n            //console.log(pais);\n            let array = data.Success.Content;\n            array = array.split(\",\"); //console.log(array)\n\n            mapPaises[pais] = array;\n          }).catch(error => console.error(\"No se encotrÃ³ en Zoho la variable \" + variable));\n        });\n        console.log(mapPaises);\n        setCodigos(mapPaises);\n      });\n      ZOHO.embeddedApp.init();\n    };\n\n    setTimeout(() => {\n      initWidget();\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ZohoContext.Provider, {\n    value: {\n      module: module,\n      entity: entity,\n      id: id,\n      setID: setID,\n      infoCompleta: infoCompleta,\n      setInfoCompleta: setInfoCompleta,\n      record: record,\n      setRecord: setRecord,\n      stores: stores,\n      setStores: setStores,\n      codigos: codigos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ZohoProvider, \"LJjzXH4X/T6hSJVDQ6HnAn2pI3I=\");\n\n_c = ZohoProvider;\n;\nexport const useWidget = () => {\n  _s2();\n\n  const context = useContext(ZohoContext);\n  if (!context) throw new Error(\"UseWidget inside ZohoContext\");\n  const {\n    entity,\n    module,\n    id,\n    setID,\n    infoCompleta,\n    setInfoCompleta,\n    record,\n    setRecord,\n    stores,\n    setStores,\n    codigos\n  } = context;\n  return {\n    entity,\n    module,\n    id,\n    setID,\n    infoCompleta,\n    setInfoCompleta,\n    record,\n    setRecord,\n    stores,\n    setStores,\n    codigos\n  };\n};\n\n_s2(useWidget, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ZohoProvider\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/ReactJs/widget_contactos_v2/my-app/src/Context/ZohoContext.js"],"names":["createContext","useContext","useState","useEffect","ZOHO","ZohoContext","ZohoProvider","children","module","setModule","entity","setEntity","id","setID","infoCompleta","setInfoCompleta","record","setRecord","stores","setStores","paises","codigos","setCodigos","initWidget","embeddedApp","on","data","console","log","EntityId","CRM","API","getRecord","Entity","RecordID","then","result","Informaci_n_de_Contacto_Completa","getRelatedRecords","RelatedList","mapPaises","Object","Mexico","Argentina","Brasil","Colombia","Chile","Ecuador","Peru","Uruguay","forEach","pais","variable","getOrgVariable","array","Success","Content","split","catch","error","init","setTimeout","useWidget","context","Error"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport {ZOHO} from '../assets/Zoho';\r\n\r\nconst ZohoContext = createContext();\r\n\r\nexport default function ZohoProvider({children}) {\r\n\r\n   const [module, setModule] = useState(null);\r\n   const [entity, setEntity] = useState(null);\r\n   const [id, setID] = useState(null);\r\n   const [infoCompleta, setInfoCompleta] = useState(null);\r\n   const [record, setRecord] = useState(null);\r\n   const [stores, setStores] = useState(null);\r\n   const [paises] = useState([\"Mexico\",\"Argentina\",\"Brasil\",\"Colombia\",\"Chile\",\"Ecuador\",\"Peru\",\"Uruguay\"]);\r\n   const [codigos, setCodigos] = useState({})\r\n\r\n   useEffect(() => {\r\n\r\n      const initWidget = () => {\r\n         ZOHO.embeddedApp.on(\"PageLoad\", function (data) {\r\n            console.log(data);\r\n            let id = data.EntityId;\r\n            setID(id);\r\n            console.log(id);\r\n            ZOHO.CRM.API.getRecord({Entity:\"Deals\",RecordID:id}).then((result)=>{\r\n              setInfoCompleta(result.data[0].Informaci_n_de_Contacto_Completa);\r\n               setRecord(result.data[0])\r\n            })\r\n            ZOHO.CRM.API.getRelatedRecords({Entity:\"Deals\",RecordID:id,RelatedList:\"Oportunidades\"}).then((data)=>{\r\n               setStores(data.data);\r\n               console.log(data.data);\r\n           })\r\n           let mapPaises = new Object({Mexico:[],\r\n            Argentina:[],\r\n            Brasil:[],\r\n            Colombia:[],\r\n            Chile:[],\r\n            Ecuador:[],\r\n            Peru:[],\r\n            Uruguay:[]});\r\n           paises.forEach(pais => {\r\n               let variable = \"codigos_ciudad_\"+pais;\r\n               ZOHO.CRM.API.getOrgVariable(variable).then(function(data){\r\n                  //console.log(pais);\r\n                  let array = data.Success.Content;\r\n                  array = array.split(\",\");\r\n                  //console.log(array)\r\n                  mapPaises[pais]=array;\r\n               }).catch(error => console.error(\"No se encotrÃ³ en Zoho la variable \"+variable));\r\n           });\r\n           console.log(mapPaises);\r\n           setCodigos(mapPaises)\r\n            \r\n         \r\n         });\r\n         \r\n\r\n         ZOHO.embeddedApp.init();\r\n      }\r\n\r\n      setTimeout(()=> {\r\n         initWidget();\r\n      }, 1000);\r\n      \r\n   }, []);\r\n   \r\n   return (\r\n      <ZohoContext.Provider value={{module: module, entity: entity, id:id, setID:setID, infoCompleta:infoCompleta, setInfoCompleta:setInfoCompleta, record: record, setRecord:setRecord, stores:stores, setStores:setStores, codigos:codigos}}>\r\n         {children}\r\n      </ZohoContext.Provider>\r\n   );\r\n};\r\n\r\nexport const useWidget = () => {\r\n\r\n   const context = useContext(ZohoContext);\r\n\r\n   if (!context) throw new Error(\"UseWidget inside ZohoContext\");\r\n\r\n   const { entity, module, id, setID, infoCompleta, setInfoCompleta, record, setRecord, stores, setStores, codigos} = context;\r\n\r\n   return {\r\n      entity, module, id, setID, infoCompleta, setInfoCompleta, record, setRecord, stores, setStores, codigos\r\n   }\r\n}"]},"metadata":{},"sourceType":"module"}