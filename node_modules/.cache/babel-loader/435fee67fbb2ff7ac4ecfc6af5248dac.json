{"ast":null,"code":"const ValidateContact = (props, codigos) => {\n  var cod_ciudades = Object.assign({}, codigos);\n  console.log(cod_ciudades);\n  let response = false;\n  const nro_completo = props;\n\n  if (nro_completo.includes(\"+54\")) {\n    let nro = nro_completo.substr(3);\n\n    if (nro.length == 10) {\n      const codigos = cod_ciudades.Argentina;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 11 && nro.startsWith(\"9\")) {\n      nro = nro.substr(1);\n      const codigos = cod_ciudades.Argentina;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else {\n      response = false;\n    }\n  } //BRASIL\n\n\n  if (nro_completo.includes(\"+55\")) {\n    const nro = nro_completo.substr(3);\n    const x = nro.substr(2, 1);\n\n    if (nro.length == 10 && x !== \"9\") {\n      const codigos = cod_ciudades.Brasil;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 11 && x == \"9\") {\n      const codigos = cod_ciudades.Brasil;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else {\n      response = false;\n    }\n  } //CHILE\n\n\n  if (nro_completo.includes(\"+56\")) {\n    const nro = nro_completo.substr(3);\n\n    if (nro.length == 9 && !nro.startsWith(\"9\")) {\n      const codigos = cod_ciudades.Chile;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 9 && nro.startsWith(\"9\")) {\n      response = true;\n    } else {\n      response = false;\n    }\n  } //MEXICO\n\n\n  if (nro_completo.includes(\"+52\")) {\n    let nro = nro_completo.substr(3);\n\n    if (nro.length == 10) {\n      const codigos = cod_ciudades.Mexico;\n      console.log(codigos);\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 11 && nro.startsWith(1)) {\n      nro = nro.substr(1);\n      const codigos = cod_ciudades.Mexico;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else {\n      response = false;\n    }\n  } //COLOMBIA\n\n\n  if (nro_completo.includes(\"+57\")) {\n    const nro = nro_completo.substr(3);\n\n    if (nro.length == 8 && !nro.startsWith(\"3\")) {\n      const codigos = cod_ciudades.Colombia;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 10 && nro.startsWith(\"3\")) {\n      response = true;\n    } else {\n      response = false;\n    }\n  } //COSTA RICA\n\n\n  if (nro_completo.includes(\"+506\")) {\n    const nro = nro_completo.substr(4);\n\n    if (nro.length == 8 && !nro.startsWith(\"6\") && !nro.startsWith(\"7\") && !nro.startsWith(\"8\")) {\n      const codigos = [22];\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 8 && (nro.startsWith(\"6\") || nro.startsWith(\"7\") || nro.startsWith(\"8\"))) {\n      response = true;\n    } else {\n      response = false;\n    }\n  } //ECUADOR\n\n\n  if (nro_completo.includes(\"+593\")) {\n    const nro = nro_completo.substr(4);\n\n    if (nro.length == 8 && !nro.startsWith(\"9\")) {\n      const codigos = cod_ciudades.Ecuador;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 9 && nro.startsWith(\"9\")) {\n      response = true;\n    } else {\n      response = false;\n    }\n  } //PERU\n\n\n  if (nro_completo.includes(\"+51\")) {\n    const nro = nro_completo.substr(3);\n\n    if (nro.length == 8 && !nro.startsWith(\"9\")) {\n      const codigos = cod_ciudades.Peru;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 9 && nro.startsWith(\"9\")) {\n      response = true;\n    } else {\n      response = false;\n    }\n  } //URUGUAY\n\n\n  if (nro_completo.includes(\"+598\")) {\n    const nro = nro_completo.substr(4);\n\n    if (nro.length == 8 && !nro.startsWith(\"9\")) {\n      const codigos = cod_ciudades.Uruguay;\n      let found = false;\n      codigos.forEach(cod => {\n        if (nro.startsWith(cod)) {\n          found = true;\n        }\n      });\n\n      if (found) {\n        response = true;\n      } else {\n        response = false;\n      }\n    } else if (nro.length == 8 && nro.startsWith(\"9\")) {\n      response = true;\n    } else {\n      response = false;\n    }\n  }\n\n  return response;\n};\n\n_c = ValidateContact;\nexport default ValidateContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidateContact\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/ReactJs/WIDGET_CONTACTOS_V2/my-app/src/Context/ValidateNumber.js"],"names":["ValidateContact","props","codigos","cod_ciudades","Object","assign","console","log","response","nro_completo","includes","nro","substr","length","Argentina","found","forEach","cod","startsWith","x","Brasil","Chile","Mexico","Colombia","Ecuador","Peru","Uruguay"],"mappings":"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","sourcesContent":["const ValidateContact = (props, codigos) => {\r\n    var cod_ciudades = Object.assign({}, codigos);\r\n    console.log(cod_ciudades)\r\n    let response = false;\r\n        const nro_completo= props;\r\n        \r\n        if(nro_completo.includes(\"+54\"))\r\n        {\r\n            let nro = nro_completo.substr(3);\r\n            if(nro.length == 10)\r\n            {\r\n                const codigos = cod_ciudades.Argentina;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n                    response = true;\r\n                }\r\n                else\r\n                {\r\n                    response = false;\r\n                }\r\n            }\r\n            else if(nro.length == 11 && nro.startsWith(\"9\"))\r\n            {\r\n                nro = nro.substr(1);\r\n                const codigos = cod_ciudades.Argentina;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n                    response = true;\r\n                }\r\n                else\r\n                {\r\n                    response = false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                response = false;\r\n            }\r\n        }\r\n        //BRASIL\r\n        if(nro_completo.includes(\"+55\"))\r\n        {\r\n            const nro = nro_completo.substr(3);\r\n            const x = nro.substr(2,1);\r\n            if(nro.length == 10 && x !== \"9\")\r\n            {\r\n                const codigos = cod_ciudades.Brasil;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 11 && x == \"9\")\r\n            {\r\n                const codigos = cod_ciudades.Brasil;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //CHILE\r\n        if(nro_completo.includes(\"+56\"))\r\n        {\r\n            const nro = nro_completo.substr(3);\r\n            if(nro.length == 9 && !nro.startsWith(\"9\"))\r\n            {\r\n                const codigos = cod_ciudades.Chile;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    } \r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 9 && nro.startsWith(\"9\"))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //MEXICO\r\n        if(nro_completo.includes(\"+52\"))\r\n        {\r\n            let nro = nro_completo.substr(3);\r\n            if(nro.length == 10)\r\n            {\r\n                const codigos = cod_ciudades.Mexico;\r\n                console.log(codigos);\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length==11 && nro.startsWith(1)){\r\n                nro = nro.substr(1);\r\n                const codigos = cod_ciudades.Mexico;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }else{\r\n                response=false;\r\n            }\r\n        }\r\n        //COLOMBIA\r\n        if(nro_completo.includes(\"+57\"))\r\n        {\r\n            const nro = nro_completo.substr(3);\r\n            if(nro.length == 8 && !nro.startsWith(\"3\"))\r\n            {\r\n                const codigos = cod_ciudades.Colombia;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    } \r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 10 && nro.startsWith(\"3\"))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //COSTA RICA\r\n        if(nro_completo.includes(\"+506\"))\r\n        {\r\n            const nro= nro_completo.substr(4);\r\n            if(nro.length == 8 && !nro.startsWith(\"6\") && !nro.startsWith(\"7\") && !nro.startsWith(\"8\"))\r\n            {\r\n                const codigos = [22];\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 8 && (nro.startsWith(\"6\") || nro.startsWith(\"7\") || nro.startsWith(\"8\")))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //ECUADOR\r\n        if(nro_completo.includes(\"+593\"))\r\n        {\r\n            const nro=nro_completo.substr(4);\r\n            if(nro.length == 8 && !nro.startsWith(\"9\"))\r\n            {\r\n                const codigos = cod_ciudades.Ecuador;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 9 && (nro.startsWith(\"9\")))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //PERU\r\n        if(nro_completo.includes(\"+51\"))\r\n        {\r\n            const nro=nro_completo.substr(3);\r\n            if(nro.length == 8 && !nro.startsWith(\"9\"))\r\n            {\r\n                const codigos = cod_ciudades.Peru;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 9 && nro.startsWith(\"9\"))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n        //URUGUAY\r\n        if(nro_completo.includes(\"+598\"))\r\n        {\r\n            const nro = nro_completo.substr(4);\r\n            if(nro.length == 8 && !nro.startsWith(\"9\"))\r\n            {\r\n                const codigos = cod_ciudades.Uruguay;\r\n                let found = false;\r\n                codigos.forEach(cod => {\r\n                    if(nro.startsWith(cod))\r\n                    {\r\n                        found = true;\r\n                    }\r\n                });\r\n                if(found)\r\n                {\r\n                    response=true;\r\n                }\r\n                else\r\n                {\r\n                    response=false;\r\n                }\r\n            }\r\n            else if(nro.length == 8 && nro.startsWith(\"9\"))\r\n            {\r\n                response=true;\r\n            }\r\n            else\r\n            {\r\n                response=false;\r\n            }\r\n        }\r\n\r\n    return ( \r\n        response\r\n     );\r\n}\r\n \r\nexport default ValidateContact;\r\n\r\n"]},"metadata":{},"sourceType":"module"}